+ export CUDA_DEVICE_MAX_CONNECTIONS=32
+ CUDA_DEVICE_MAX_CONNECTIONS=32
+ srun -p h01 -N 1 --ntasks-per-node=8 --gres=gpu:8 --mem 256G -K -w g40 -c 13 ./scripts/runtime/bench_dist_attn.sh python bench_dist_attn.py
GpuFreq=control_disabled
Sqs: [65536]
Skvs: [65536]
fob=0
da_config: SP=(1,8),Sg=(65536,65536),S=(524288,524288),Nh=(32,32),bs=1,D=128,causal=True,hierarchy=1,bsa_config=8_8_lg_1-4_3&3_0&0_2
# orchestrated_attn_func
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step0:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step1:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step2:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
total_sparsity: 0.4375
mfu: 332.586 Tflops/s, hfu: 332.586 Tflops/s, 1.350 iter/s, 7.405e-01 s/iter, (12.076, 0.003, 2.962) sec
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step0:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step1:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step2:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
total_sparsity: 0.4375
mfu: 307.708 Tflops/s, hfu: 307.708 Tflops/s, 1.249 iter/s, 8.004e-01 s/iter, (28.597, 0.002, 3.202) sec
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step0:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step1:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step2:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
total_sparsity: 0.4375
mfu: 292.084 Tflops/s, hfu: 292.084 Tflops/s, 1.186 iter/s, 8.432e-01 s/iter, (40.766, 0.001, 3.373) sec
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step0:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step1:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
step2:
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 65536, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
inp_row.Q: torch.Size([1, 131072, 32, 128]), inp_col.K: torch.Size([1, 65536, 32, 128]), inp_col.V: torch.Size([1, 65536, 32, 128])
total_sparsity: 0.4375
mfu: 290.975 Tflops/s, hfu: 290.975 Tflops/s, 1.181 iter/s, 8.464e-01 s/iter, (51.877, 0.001, 3.386) sec
+ set +x
